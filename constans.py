from scripts.paths_list import get_path
import pygame
import os

#Scalas y tama√±o de pantalla, celdas, personajes, etc.
WINDOW_WIDTH = 800
WINDOW_HEIGHT = 600
TITLE = "             Bomberman" 

FUENTE_RETRO = os.path.join('Assets', 'fonts', 'Minecraftia-Regular.ttf') 
WIDTH = 800
HEIGHT = 640
CELL_SIZE = 32
PERSON_SCALE = 32
EXPLOTION_SCALE = 50
OFFSET_Y = 64
ROWS = 18
COLS = 25

#Colores
COLORS = {
    'WHITE': (255, 255, 255),
    'BLACK': (0, 0, 0),
    'RED': (255, 0, 0),
    'GREEN': (0, 255, 0),
    'GRAY': (128, 128, 128),
    'BG': (50, 50, 100),
    'TITLE': (255, 255, 0),
    'YELLOW': (255, 255, 0),
}

#Barras
BAR_LEN = 150
BAR_HEIGHT = 20

# =======================================================================================================
# *                               Assets indestructibles de los mapas                                   *
# =======================================================================================================

MAP1_INDESTRUCTIBLE = [
    (2, 5), (2, 9), (2, 10), (2, 11), (2, 15),
    (3, 3), (3, 5), (3, 7), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 16),
    (4, 5), (4, 9), (4, 10), (4, 11), (4, 15),
    (6, 2), (6, 4), (6, 6), (6, 8), (6, 10), (6, 12), (6, 14), (6, 16), (6, 18),
    (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (8, 16), (8, 17),
    (9, 3), (9, 16),
    (10, 3), (10, 16),
    (11, 3), (11, 16),
    (12, 3), (12, 16),
    (13, 3), (13, 16),
    (14, 3), (14, 16),
    (15, 3), (15, 16),
    (16, 3), (16, 16),
    (17, 3), (17, 16),
    (18, 3), (18, 16),
    (19, 3), (19, 16),
    (20, 3), (20, 16),
    (21, 3), (21, 4), (21, 5), (21, 6), (21, 7), (21, 8), (21, 9), (21, 10), (21, 11), (21, 12), (21, 13), (21, 14), (21, 15), (21, 16), (21, 17)
]

MAP2_INDESTRUCTIBLE = [
    (2, 2), (2, 4), (2, 6), (2, 8), (2, 10), (2, 12), (2, 14), (2, 16), (2, 18),
    (4, 2), (4, 4), (4, 6), (4, 8), (4, 10), (4, 12), (4, 14), (4, 16), (4, 18),
    (6, 1), (6, 2), (6, 3), (6, 4), (6, 5), (6, 6), (6, 7), (6, 8), (6, 9), (6, 11), (6, 12), (6, 13), (6, 14), (6, 15), (6, 16), (6, 17), (6, 18),
    (8, 2), (8, 4), (8, 6), (8, 8), (8, 10), (8, 12), (8, 14), (8, 16), (8, 18),
    (10, 2), (10, 4), (10, 6), (10, 8), (10, 10), (10, 12), (10, 14), (10, 16), (10, 18),
    (12, 1), (12, 2), (12, 3), (12, 4), (12, 5), (12, 6), (12, 7), (12, 8), (12, 9), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 16), (12, 17), (12, 18),
    (14, 2), (14, 4), (14, 6), (14, 8), (14, 10), (14, 12), (14, 14), (14, 16), (14, 18),
    (16, 2), (16, 4), (16, 6), (16, 8), (16, 10), (16, 12), (16, 14), (16, 16), (16, 18),
    (20, 2), (20, 4), (20, 6), (20, 8), (20, 10), (20, 12), (20, 14), (20, 16), (20, 18),
    (22, 2), (22, 4), (22, 6), (22, 8), (22, 10), (22, 12), (22, 14), (22, 16), (22, 18)
]

MAP3_INDESTRUCTIBLE = [
    (2, 2), (2, 3), (2, 4), (2, 6), (2, 7), (2, 8), (2, 10), (2, 11), (2, 12), (2, 14), (2, 15), (2, 16),
    (3, 2), (3, 8), (3, 10), (3, 16),
    (4, 2), (4, 8), (4, 10), (4, 16),
    (5, 2), (5, 8), (5, 10), (5, 16),
    (6, 2), (6, 8), (6, 10), (6, 16),
    (7, 2), (7, 3), (7, 4), (7, 6), (7, 7), (7, 8), (7, 10), (7, 11), (7, 12), (7, 14), (7, 15), (7, 16),
    (9, 2), (9, 3), (9, 4), (9, 6), (9, 7), (9, 8), (9, 10), (9, 11), (9, 12), (9, 14), (9, 15), (9, 16),
    (10, 2), (10, 8), (10, 10), (10, 16),
    (11, 2), (11, 8), (11, 10), (11, 16),
    (12, 2), (12, 8), (12, 10), (12, 16),
    (13, 2), (13, 8), (13, 10), (13, 16),
    (14, 2), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 14), (14, 15), (14, 16),
    (16, 2), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 14), (16, 15), (16, 16),
    (17, 2), (17, 8), (17, 10), (17, 16),
    (18, 2), (18, 8), (18, 10), (18, 16),
    (19, 2), (19, 8), (19, 10), (19, 16),
    (20, 2), (20, 8), (20, 10), (20, 16),
    (21, 2), (21, 3), (21, 4), (21, 6), (21, 7), (21, 8), (21, 10), (21, 11), (21, 12), (21, 14), (21, 15), (21, 16)
]

MAP4_INDESTRUCTIBLE = [
    (3, 3), (3, 4), (3, 5), (3, 6), (3, 7), (3, 9), (3, 10), (3, 13), (3, 14), (3, 15), (3, 16), (3, 17),
    (4, 3), (4, 9), (4, 10), (4, 16),
    (5, 3), (5, 9), (5, 10), (5, 16),
    (6, 3), (6, 9), (6, 10), (6, 16),
    (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 9), (7, 10), (7, 13), (7, 14), (7, 15), (7, 16), (7, 17),
    (12, 3), (12, 4), (12, 5), (12, 6), (12, 7), (12, 9), (12, 10), (12, 13), (12, 14), (12, 15), (12, 16), (12, 17),
    (13, 3), (13, 9), (13, 10), (13, 16),
    (14, 3), (14, 9), (14, 10), (14, 16),
    (15, 3), (15, 9), (15, 10), (15, 16),
    (16, 3), (16, 4), (16, 5), (16, 6), (16, 7), (16, 9), (16, 10), (16, 13), (16, 14), (16, 15), (16, 16), (16, 17),
    (21, 3), (21, 4), (21, 5), (21, 6), (21, 7), (21, 9), (21, 10), (21, 13), (21, 14), (21, 15), (21, 16), (21, 17),
    (22, 3), (22, 9), (22, 10), (22, 16),
    (23, 3)
]
PORTAL_POS = [(3, 10), (8, 23), (8, 9), (16, 1)]
MAP1_AMBIENTE = {
    'V': [
        (5, 6), (5, 7), (5, 8), (6, 6), (6, 7), (7, 7), (7, 8),
        (8, 7), (9, 7), (10, 7), (10, 8), (11, 8), (12, 8)
    ],
    'H': [
        (15, 10), (15, 11), (15, 12),
        (16, 10), (16, 11), (16, 12), (17, 11), (17, 12),
        (18, 11), (19, 11), (20, 11)
    ]
}

MAP2_AMBIENTE = {
    'V': [
        (3, 3), (3, 5), (3, 7), (3, 9),
        (5, 3), (5, 5), (5, 7), (5, 9),
        (7, 3), (7, 5), (7, 7), (7, 9)
    ],
    'H': [
        (9, 3), (9, 5), (9, 7), (9, 9),
        (11, 3), (11, 5), (11, 7), (11, 9),
        (13, 3), (13, 5), (13, 7), (13, 9)
    ]
}

MAP3_AMBIENTE = {
    'V': [
        (3, 14), (4, 14), (5, 14),
        (6, 14), (7, 14)
    ],
    'H': [
        (8, 2), (8, 3), (8, 4)
    ]
}

MAP4_AMBIENTE = {
    'V': [
        (6, 18), (6, 19), (6, 20),
        (7, 18), (7, 19), (7, 20),
        (8, 18), (8, 19), (8, 20)
    ],
    'H': [
        (11, 21), (11, 22), (11, 23),
        (12, 21), (12, 22), (12, 23),
        (13, 21), (13, 22), (13, 23)
    ]
}

BGS = get_path(os.path.join('Assets', 'tiles'))
KEY_PATH = 'Assets\Key\key.png'
IMGS = {
    'box': pygame.image.load(BGS[0]),
    'grass': pygame.image.load(BGS[1]),
    'stone': pygame.image.load(BGS[6]),
    'sand': pygame.image.load(BGS[5]),
    'volcano_stone': pygame.image.load(BGS[7]),
    'land': pygame.image.load(BGS[3]),
    'ice': pygame.image.load(BGS[2]),
    'poison': pygame.image.load(BGS[4]),
}
SCALE_IMS = {
    'box': pygame.transform.scale(IMGS['box'], (CELL_SIZE, CELL_SIZE)),
    'grass': pygame.transform.scale(IMGS['grass'], (CELL_SIZE, CELL_SIZE)),
    'stone': pygame.transform.scale(IMGS['stone'], (CELL_SIZE, CELL_SIZE)),
    'sand': pygame.transform.scale(IMGS['sand'], (CELL_SIZE, CELL_SIZE)),
    'volcano_stone': pygame.transform.scale(IMGS['volcano_stone'], (CELL_SIZE, CELL_SIZE)),
    'land': pygame.transform.scale(IMGS['land'], (CELL_SIZE, CELL_SIZE)),
    'ice': pygame.transform.scale(IMGS['ice'], (CELL_SIZE, CELL_SIZE)),
    'poison': pygame.transform.scale(IMGS['poison'], (CELL_SIZE, CELL_SIZE))
}
